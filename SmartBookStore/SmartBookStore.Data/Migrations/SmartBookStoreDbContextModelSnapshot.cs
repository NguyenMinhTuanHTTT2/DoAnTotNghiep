// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBookStore.Data;

#nullable disable

namespace SmartBookStore.Data.Migrations
{
    [DbContext(typeof(SmartBookStoreDbContext))]
    partial class SmartBookStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_DonHang.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTietDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDonHang"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_DonHang.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_GioHang.ChiTietGioHang", b =>
                {
                    b.Property<int>("MaChiTietGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietGioHang"));

                    b.Property<int>("MaGioHang")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietGioHang");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaSach");

                    b.ToTable("ChiTietGioHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_GioHang.GioHang", b =>
                {
                    b.Property<int>("MaGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGioHang"));

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.HasKey("MaGioHang");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.GoiYAI", b =>
                {
                    b.Property<int>("MaGoiY")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGoiY"));

                    b.Property<double>("DiemGoiY")
                        .HasColumnType("float");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.HasKey("MaGoiY");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaSach");

                    b.ToTable("GoiYAIs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.PhanHoiHoTro", b =>
                {
                    b.Property<int>("MaPhanHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanHoi"));

                    b.Property<int>("MaYeuCau")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhanHoi");

                    b.HasIndex("MaYeuCau");

                    b.ToTable("PhanHoiHoTros");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.YeuCauHoTro", b =>
                {
                    b.Property<int>("MaYeuCau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaYeuCau"));

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaYeuCau");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("YeuCauHoTros");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhuyenMai"));

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai_DonHang", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .HasColumnType("int");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.HasKey("MaKhuyenMai", "MaDonHang");

                    b.HasIndex("MaDonHang");

                    b.ToTable("KhuyenMai_DonHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai_Sach", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .HasColumnType("int");

                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.HasKey("MaKhuyenMai", "MaSach");

                    b.HasIndex("MaSach");

                    b.ToTable("KhuyenMai_Sachs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaVaiTro")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MaVaiTro");

                    b.ToTable("NguoiDungs");

                    b.HasData(
                        new
                        {
                            MaNguoiDung = 1,
                            Email = "admin0@gmail.com",
                            MaVaiTro = 1,
                            MatKhau = "123456",
                            Ten = "Quản trị viên"
                        },
                        new
                        {
                            MaNguoiDung = 2,
                            Email = "admin1@gmail.com",
                            MaVaiTro = 2,
                            MatKhau = "123456",
                            Ten = "Nguyễn Văn A"
                        });
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_NguoiDung.VaiTro", b =>
                {
                    b.Property<int>("MaVaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVaiTro"));

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaVaiTro");

                    b.ToTable("VaiTros");

                    b.HasData(
                        new
                        {
                            MaVaiTro = 1,
                            TenVaiTro = "Admin"
                        },
                        new
                        {
                            MaVaiTro = 2,
                            TenVaiTro = "KhachHang"
                        });
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSach"));

                    b.Property<string>("AnhBia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgayXuatBan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhaXuatBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSach");

                    b.ToTable("Sachs");

                    b.HasData(
                        new
                        {
                            MaSach = 1,
                            Gia = 120000m,
                            NgayXuatBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuongTon = 50,
                            TenSach = "Lập trình C# cơ bản",
                            TrangThai = true
                        },
                        new
                        {
                            MaSach = 2,
                            Gia = 150000m,
                            NgayXuatBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuongTon = 30,
                            TenSach = "Học ASP.NET Core MVC",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach_TacGia", b =>
                {
                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<int>("MaTacGia")
                        .HasColumnType("int");

                    b.HasKey("MaSach", "MaTacGia");

                    b.HasIndex("MaTacGia");

                    b.ToTable("Sach_TacGias");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach_TheLoai", b =>
                {
                    b.Property<int>("MaSach")
                        .HasColumnType("int");

                    b.Property<int>("MaTheLoai")
                        .HasColumnType("int");

                    b.HasKey("MaSach", "MaTheLoai");

                    b.HasIndex("MaTheLoai");

                    b.ToTable("Sach_TheLoais");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.TacGia", b =>
                {
                    b.Property<int>("MaTacGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTacGia"));

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTacGia");

                    b.ToTable("TacGias");

                    b.HasData(
                        new
                        {
                            MaTacGia = 1,
                            TenTacGia = "Nguyễn Minh Tuân"
                        },
                        new
                        {
                            MaTacGia = 2,
                            TenTacGia = "Nguyễn Thị Lan"
                        },
                        new
                        {
                            MaTacGia = 3,
                            TenTacGia = "Tố Hữu"
                        });
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.TheLoai", b =>
                {
                    b.Property<int>("MaTheLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTheLoai"));

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTheLoai");

                    b.ToTable("TheLoais");

                    b.HasData(
                        new
                        {
                            MaTheLoai = 1,
                            TenTheLoai = "Khoa học"
                        },
                        new
                        {
                            MaTheLoai = 2,
                            TenTheLoai = "Văn học"
                        },
                        new
                        {
                            MaTheLoai = 3,
                            TenTheLoai = "Công nghệ"
                        },
                        new
                        {
                            MaTheLoai = 4,
                            TenTheLoai = "Thiếu nhi"
                        });
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_DonHang.ChiTietDonHang", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_DonHang.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_DonHang.DonHang", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", "NguoiDung")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_GioHang.ChiTietGioHang", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_GioHang.GioHang", "GioHang")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany("ChiTietGioHangs")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_GioHang.GioHang", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", "NguoiDung")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.GoiYAI", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany()
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.PhanHoiHoTro", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_HoTroAI.YeuCauHoTro", "YeuCauHoTro")
                        .WithMany("PhanHoiHoTros")
                        .HasForeignKey("MaYeuCau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YeuCauHoTro");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.YeuCauHoTro", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", "NguoiDung")
                        .WithMany("YeuCauHoTros")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai_DonHang", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_DonHang.DonHang", "DonHang")
                        .WithMany("KhuyenMai_DonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai", "KhuyenMai")
                        .WithMany("KhuyenMai_DonHangs")
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai_Sach", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai", "KhuyenMai")
                        .WithMany("KhuyenMai_Sachs")
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany("KhuyenMai_Sachs")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_NguoiDung.VaiTro", "VaiTro")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach_TacGia", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany("Sach_TacGias")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.TacGia", "TacGia")
                        .WithMany("Sach_TacGias")
                        .HasForeignKey("MaTacGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TacGia");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach_TheLoai", b =>
                {
                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.Sach", "Sach")
                        .WithMany("Sach_TheLoais")
                        .HasForeignKey("MaSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBookStore.Data.Model_Data.DT_Sach.TheLoai", "TheLoai")
                        .WithMany("Sach_TheLoais")
                        .HasForeignKey("MaTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sach");

                    b.Navigation("TheLoai");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_DonHang.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("KhuyenMai_DonHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_GioHang.GioHang", b =>
                {
                    b.Navigation("ChiTietGioHangs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_HoTroAI.YeuCauHoTro", b =>
                {
                    b.Navigation("PhanHoiHoTros");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_KhuyenMai.KhuyenMai", b =>
                {
                    b.Navigation("KhuyenMai_DonHangs");

                    b.Navigation("KhuyenMai_Sachs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_NguoiDung.NguoiDung", b =>
                {
                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("YeuCauHoTros");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_NguoiDung.VaiTro", b =>
                {
                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.Sach", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("ChiTietGioHangs");

                    b.Navigation("KhuyenMai_Sachs");

                    b.Navigation("Sach_TacGias");

                    b.Navigation("Sach_TheLoais");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.TacGia", b =>
                {
                    b.Navigation("Sach_TacGias");
                });

            modelBuilder.Entity("SmartBookStore.Data.Model_Data.DT_Sach.TheLoai", b =>
                {
                    b.Navigation("Sach_TheLoais");
                });
#pragma warning restore 612, 618
        }
    }
}
